<%- include("header") -%>
  

<div class="icons"style="margin-top:2rem;text-align: center">
  <div class="card col-md-6">
    <div class="card-body">
        <a href="/auth/google"><img src="/picha/google.png"style="width:2.2rem;height:2.2rem">Sign in with Google</a>
    </div>
  </div>
  <div class="card col-md-6">
    <div class="card-body">
        <a href="/auth/facebook"><img src="/picha/facebook.png"style="width:2.2rem;height:2.2rem"> Sign in with Facebook</a>
    </div>
  </div>
</div>
<h6 style="text-align: center;" class="mt-4">OR <br>(make sure you remember your username !!!)<br></h6>
<!-- <h8 style="text-align: center;">(if you don't have an email or password) sign up here</h8> -->
<div class=""style="justify-content:center;align-items:center;display:flex;">
    <form method="post" action="/auth/signup">
    
      <small style="color: rgb(136, 135, 164);"><%=data%></small>
      <input type="text"name="displayname" id="displayname" placeholder="Enter unique display name" class="form-control" autocomplete="off" required oninput="checkDisplaynameAvailability()">
          <small id="displaynameHelp" class="form-text"></small>
      <br>

          <input type="text"name="username" id="username" placeholder="Enter unique username(email)" class="form-control" autocomplete="off" required oninput="checkUsernameAvailability()">
          <small id="usernameHelp" class="form-text"></small>
      <br>
    
          <input type="password" name="password"placeholder="Enter your password" class="form-control"required>
      
       <br>
      <button id="registerBtn" class="btn btn-primary btn-sm" type="submit" disabled>SIGNUP</button>
      <br>
      <a href="/auth/signin">you have an account already (login)</a>
      <br>
      <a href="/auth/passwordreset">Forgot Password ?</a>
    </form>
</div>
<script>

// Track the validity of both fields
let isUsernameValid = false;
let isDisplaynameValid = false;



function updateRegisterButton() {
  const registerBtn = document.getElementById('registerBtn');
  registerBtn.disabled = !(isUsernameValid && isDisplaynameValid);
}

  async function checkUsernameAvailability() {
    const username = document.getElementById('username').value;
    const helpText = document.getElementById('usernameHelp');
    const registerBtn = document.getElementById('registerBtn');
    
    if (username.length < 3) {
      helpText.textContent = 'Username must be at least 3 characters';
      helpText.style.color = 'red';
      isUsernameValid=false;
      updateRegisterButton();
      return;
    }
  
    try {
      const response = await fetch(`/auth/api/check-username?username=${encodeURIComponent(username)}`);
    const data = await response.json();
    
    if (data.available) {
      helpText.textContent = 'Username is available!';
      helpText.style.color = 'green';
      isUsernameValid=true;
    } else {
      helpText.textContent = 'Username already exists!';
      helpText.style.color = 'red';
      isUsernameValid=false;
    }
  } catch (error) {
    helpText.textContent = 'Error checking username';
    helpText.style.color = 'red';
    isUsernameValid = false;
  }
  updateRegisterButton();

  // Re-check display name in case it resembles the new username
  const displayname = document.getElementById('displayname').value;
  if (displayname) {
    checkDisplaynameAvailability();
  }
}


async function checkDisplaynameAvailability() {
    const displayname = document.getElementById('displayname').value;
    const helpText = document.getElementById('displaynameHelp');
    const username = document.getElementById('username').value;

// Reset validation
isDisplaynameValid = false;
  updateRegisterButton();

    if (displayname.length < 3) {
      helpText.textContent = 'display name must be at least 3 characters';
      helpText.style.color = 'red';
      // isDisplaynameValid = false;
      // updateRegisterButton();
      return;
    }

    // Check if display name resembles username
  if (username && displayname.toLowerCase().includes(username.toLowerCase())) {
    helpText.textContent = 'Display name should not resemble username!';
    helpText.style.color = 'red';
    return;
  }

  // Check for at least 1 letter, 1 number, and 1 special character
  const hasLetter = /[a-zA-Z]/.test(displayname);
  const hasNumber = /[0-9]/.test(displayname);
  const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(displayname);

  if (!hasLetter || !hasNumber || !hasSpecialChar) {
    helpText.textContent = 'Must contain 1 letter, 1 number, and 1 special character (!@#$%^&*)';
    helpText.style.color = 'red';
    return;
  }
  
    try {
      const response = await fetch(`/auth/api/check-displayname?displayname=${encodeURIComponent(displayname)}`);
    const data = await response.json();
    
    if (data.available) {
      helpText.textContent = 'display name is available!';
      helpText.style.color = 'green';
      isDisplaynameValid=true;
    } else {
      helpText.textContent = 'display name already exists!';
      helpText.style.color = 'red';
      isDisplaynameValid=false;
    }
  } catch (error) {
    helpText.textContent = 'Error checking displayname';
    helpText.style.color = 'red';
    isDisplaynameValid=false;
  }
  updateRegisterButton();
}

    window.addEventListener('pageshow', function(event) {
      if (event.persisted) {
        window.location.reload();
      }
    });
</script>
<%- include("footer") -%> 